repos:
    -   repo: local
        hooks:
        - id: black
          name: black
          language: system
          entry: black -S
          types: [python]
        - id: gitlint
          name: gitlint
          language: system
          entry: gitlint --msg-filename
          stages: [commit-msg]
        - id: check-added-large-files
          name: Check for added large files
          description: Prevent giant files from being committed
          entry: check-added-large-files
          language: python
        - id: check-byte-order-marker
          name: Check for byte-order marker
          description: Forbid files which have a UTF-8 byte-order marker
          entry: check-byte-order-marker
          language: python
          types: [text]
        - id: check-builtin-literals
          name: Check builtin type constructor use
          description: Require literal syntax when initializing empty or zero Python builtin types.
          entry: check-builtin-literals
          language: python
          types: [python]
        - id: check-case-conflict
          name: Check for case conflicts
          description: Check for files that would conflict in case-insensitive filesystems
          entry: check-case-conflict
          language: python
        - id: check-docstring-first
          name: Check docstring is first
          description: Checks a common error of defining a docstring after code.
          entry: check-docstring-first
          language: python
          types: [python]
        - id: check-executables-have-shebangs
          name: Check that executables have shebangs
          description: Ensures that (non-binary) executables have a shebang.
          entry: check-executables-have-shebangs
          language: python
          types: [text, executable]
          stages: [commit, push, manual]
        - id: check-json
          name: Check JSON
          description: This hook checks json files for parseable syntax.
          entry: check-json
          language: python
          types: [json]
        - id: pretty-format-json
          name: Pretty format JSON
          description: This hook sets a standard for formatting JSON files.
          entry: pretty-format-json
          language: python
          types: [json]
        - id: check-merge-conflict
          name: Check for merge conflicts
          description: Check for files that contain merge conflict strings.
          entry: check-merge-conflict
          language: python
          types: [text]
        - id: check-symlinks
          name: Check for broken symlinks
          description: Checks for symlinks which do not point to anything.
          entry: check-symlinks
          language: python
          types: [symlink]
        - id: check-toml
          name: Check Toml
          description: This hook checks toml files for parseable syntax.
          entry: check-toml
          language: python
          types: [toml]
        - id: check-vcs-permalinks
          name: Check vcs permalinks
          description: Ensures that links to vcs websites are permalinks.
          entry: check-vcs-permalinks
          language: python
          types: [text]
        - id: check-xml
          name: Check Xml
          description: This hook checks xml files for parseable syntax.
          entry: check-xml
          language: python
          types: [xml]
        - id: check-yaml
          name: Check Yaml
          description: This hook checks yaml files for parseable syntax.
          entry: check-yaml
          language: python
          types: [yaml]
        - id: debug-statements
          name: Debug Statements (Python)
          description: Check for debugger imports and py37+ `breakpoint()` calls in python source.
          entry: debug-statement-hook
          language: python
          types: [python]
        - id: detect-private-key
          name: Detect Private Key
          description: Detects the presence of private keys
          entry: detect-private-key
          language: python
          types: [text]
        - id: end-of-file-fixer
          name: Fix End of Files
          description: Ensures that a file is either empty, or ends with one newline.
          entry: end-of-file-fixer
          language: python
          types: [text]
          stages: [commit, push, manual]
        - id: fix-encoding-pragma
          name: Fix python encoding pragma
          language: python
          entry: fix-encoding-pragma
          description: 'Add # -*- coding: utf-8 -*- to the top of python files'
          types: [python]
        - id: flake8
          name: Flake8
          description: This hook runs flake8.
          entry: flake8
          language: python
          types: [python]
          require_serial: true
        - id: forbid-new-submodules
          name: Forbid new submodules
          language: python
          entry: forbid-new-submodules
          description: Prevent addition of new git submodules
        - id: mixed-line-ending
          name: Mixed line ending
          description: Replaces or checks mixed line ending
          entry: mixed-line-ending
          language: python
          types: [text]
        - id: trailing-whitespace
          name: Trim Trailing Whitespace
          description: This hook trims trailing whitespace.
          entry: trailing-whitespace-fixer
          language: python
          types: [text]
          stages: [commit, push, manual]
